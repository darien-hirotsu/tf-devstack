---
- hosts: node
  remote_user: root
  become: yes
  tasks:
  - name: check if pip present
    shell: pip --version
    ignore_errors: true
    register: pip_check

  - name: Install pip on RedHat family
    block:
      - name: install easy_install
        package:
          name: python-setuptools
          state: present
      - name: install pip package
        easy_install:
          name: pip
          state: latest
    when:
      - pip_check.rc != 0
      - ansible_os_family == 'RedHat'

  - name: Install pip on Debian family
    block:
      - name: install package
        apt:
          name: "{{ item }}"
          state: present
        register: res
        retries: 5
        until: res | success
        with_items:
          - python-setuptools
          - python-pip
    when:
      - pip_check.rc != 0
      - ansible_os_family == 'Debian'

  - name: Set ip forwarding on
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present

  - name: Get default node interface
    shell: "ip route get 1 | grep -o 'dev.*' | awk '{print($2)}'"
    register: node_physical_interface

  - name: Get default node IP
    shell: "ip addr show dev {{ node_physical_interface.stdout }} | grep 'inet ' | awk '{print $2}' | head -n 1 | cut -d '/' -f 1"
    register: default_node_ip

  - name: Store default node IP
    copy:
      dest: /opt/control/default_node_ip
      content: "{{ default_node_ip.stdout }}"
    delegate_to: localhost

  - name: Get OS version in Linux
    shell: "cat /etc/*release | egrep '^ID=' | awk -F= '{print $2}' | tr -d \""
    register: node_distro

  - name: Store OS version in Linux
    copy:
      dest: /opt/control/node_distro
      content: "{{ node_distro.stdout }}"
    delegate_to: localhost
